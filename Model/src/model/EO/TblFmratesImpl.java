package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 27 12:13:19 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblFmratesImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        FmratesId,
        FromDate,
        ToDate,
        FmvendorsId,
        FmlocationId,
        FmitemsId,
        Fmrate,
        Fmfreight,
        FmprodCost,
        FmdlvRate,
        FmstPerc,
        FmstAmt,
        FmmarginPerc,
        FmmarginAmt,
        FmnetRate,
        Fmremarks,
        RefineryRate,
        OmcPer,
        CreatedBy,
        CreatedDate,
        UpdatedBy,
        UpdatedDate,
        TblFmitems,
        TblFmlocation,
        TblFmvendors;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int FMRATESID = AttributesEnum.FmratesId.index();
    public static final int FROMDATE = AttributesEnum.FromDate.index();
    public static final int TODATE = AttributesEnum.ToDate.index();
    public static final int FMVENDORSID = AttributesEnum.FmvendorsId.index();
    public static final int FMLOCATIONID = AttributesEnum.FmlocationId.index();
    public static final int FMITEMSID = AttributesEnum.FmitemsId.index();
    public static final int FMRATE = AttributesEnum.Fmrate.index();
    public static final int FMFREIGHT = AttributesEnum.Fmfreight.index();
    public static final int FMPRODCOST = AttributesEnum.FmprodCost.index();
    public static final int FMDLVRATE = AttributesEnum.FmdlvRate.index();
    public static final int FMSTPERC = AttributesEnum.FmstPerc.index();
    public static final int FMSTAMT = AttributesEnum.FmstAmt.index();
    public static final int FMMARGINPERC = AttributesEnum.FmmarginPerc.index();
    public static final int FMMARGINAMT = AttributesEnum.FmmarginAmt.index();
    public static final int FMNETRATE = AttributesEnum.FmnetRate.index();
    public static final int FMREMARKS = AttributesEnum.Fmremarks.index();
    public static final int REFINERYRATE = AttributesEnum.RefineryRate.index();
    public static final int OMCPER = AttributesEnum.OmcPer.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int TBLFMITEMS = AttributesEnum.TblFmitems.index();
    public static final int TBLFMLOCATION = AttributesEnum.TblFmlocation.index();
    public static final int TBLFMVENDORS = AttributesEnum.TblFmvendors.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblFmratesImpl() {
    }

    /**
     * Gets the attribute value for FmratesId, using the alias name FmratesId.
     * @return the value of FmratesId
     */
    public BigDecimal getFmratesId() {
        return (BigDecimal) getAttributeInternal(FMRATESID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmratesId.
     * @param value value to set the FmratesId
     */
    public void setFmratesId(BigDecimal value) {
        setAttributeInternal(FMRATESID, value);
    }

    /**
     * Gets the attribute value for FromDate, using the alias name FromDate.
     * @return the value of FromDate
     */
    public Timestamp getFromDate() {
        return (Timestamp) getAttributeInternal(FROMDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FromDate.
     * @param value value to set the FromDate
     */
    public void setFromDate(Timestamp value) {
        setAttributeInternal(FROMDATE, value);
    }

    /**
     * Gets the attribute value for ToDate, using the alias name ToDate.
     * @return the value of ToDate
     */
    public Timestamp getToDate() {
        return (Timestamp) getAttributeInternal(TODATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for ToDate.
     * @param value value to set the ToDate
     */
    public void setToDate(Timestamp value) {
        setAttributeInternal(TODATE, value);
    }

    /**
     * Gets the attribute value for FmvendorsId, using the alias name FmvendorsId.
     * @return the value of FmvendorsId
     */
    public BigDecimal getFmvendorsId() {
        return (BigDecimal) getAttributeInternal(FMVENDORSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsId.
     * @param value value to set the FmvendorsId
     */
    public void setFmvendorsId(BigDecimal value) {
        setAttributeInternal(FMVENDORSID, value);
    }

    /**
     * Gets the attribute value for FmlocationId, using the alias name FmlocationId.
     * @return the value of FmlocationId
     */
    public BigDecimal getFmlocationId() {
        return (BigDecimal) getAttributeInternal(FMLOCATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmlocationId.
     * @param value value to set the FmlocationId
     */
    public void setFmlocationId(BigDecimal value) {
        setAttributeInternal(FMLOCATIONID, value);
    }

    /**
     * Gets the attribute value for FmitemsId, using the alias name FmitemsId.
     * @return the value of FmitemsId
     */
    public BigDecimal getFmitemsId() {
        return (BigDecimal) getAttributeInternal(FMITEMSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmitemsId.
     * @param value value to set the FmitemsId
     */
    public void setFmitemsId(BigDecimal value) {
        setAttributeInternal(FMITEMSID, value);
    }

    /**
     * Gets the attribute value for Fmrate, using the alias name Fmrate.
     * @return the value of Fmrate
     */
    public BigDecimal getFmrate() {
        return (BigDecimal) getAttributeInternal(FMRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fmrate.
     * @param value value to set the Fmrate
     */
    public void setFmrate(BigDecimal value) {
        setAttributeInternal(FMRATE, value);
    }

    /**
     * Gets the attribute value for Fmfreight, using the alias name Fmfreight.
     * @return the value of Fmfreight
     */
    public BigDecimal getFmfreight() {
        return (BigDecimal) getAttributeInternal(FMFREIGHT);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fmfreight.
     * @param value value to set the Fmfreight
     */
    public void setFmfreight(BigDecimal value) {
        setAttributeInternal(FMFREIGHT, value);
    }

    /**
     * Gets the attribute value for FmprodCost, using the alias name FmprodCost.
     * @return the value of FmprodCost
     */
    public BigDecimal getFmprodCost() {
        return (BigDecimal) getAttributeInternal(FMPRODCOST);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmprodCost.
     * @param value value to set the FmprodCost
     */
    public void setFmprodCost(BigDecimal value) {
        setAttributeInternal(FMPRODCOST, value);
    }

    /**
     * Gets the attribute value for FmdlvRate, using the alias name FmdlvRate.
     * @return the value of FmdlvRate
     */
    public BigDecimal getFmdlvRate() {
        return (BigDecimal) getAttributeInternal(FMDLVRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmdlvRate.
     * @param value value to set the FmdlvRate
     */
    public void setFmdlvRate(BigDecimal value) {
        setAttributeInternal(FMDLVRATE, value);
    }

    /**
     * Gets the attribute value for FmstPerc, using the alias name FmstPerc.
     * @return the value of FmstPerc
     */
    public BigDecimal getFmstPerc() {
        return (BigDecimal) getAttributeInternal(FMSTPERC);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmstPerc.
     * @param value value to set the FmstPerc
     */
    public void setFmstPerc(BigDecimal value) {
        setAttributeInternal(FMSTPERC, value);
    }

    /**
     * Gets the attribute value for FmstAmt, using the alias name FmstAmt.
     * @return the value of FmstAmt
     */
    public BigDecimal getFmstAmt() {
        return (BigDecimal) getAttributeInternal(FMSTAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmstAmt.
     * @param value value to set the FmstAmt
     */
    public void setFmstAmt(BigDecimal value) {
        setAttributeInternal(FMSTAMT, value);
    }

    /**
     * Gets the attribute value for FmmarginPerc, using the alias name FmmarginPerc.
     * @return the value of FmmarginPerc
     */
    public BigDecimal getFmmarginPerc() {
        return (BigDecimal) getAttributeInternal(FMMARGINPERC);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmmarginPerc.
     * @param value value to set the FmmarginPerc
     */
    public void setFmmarginPerc(BigDecimal value) {
        setAttributeInternal(FMMARGINPERC, value);
    }

    /**
     * Gets the attribute value for FmmarginAmt, using the alias name FmmarginAmt.
     * @return the value of FmmarginAmt
     */
    public BigDecimal getFmmarginAmt() {
        return (BigDecimal) getAttributeInternal(FMMARGINAMT);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmmarginAmt.
     * @param value value to set the FmmarginAmt
     */
    public void setFmmarginAmt(BigDecimal value) {
        setAttributeInternal(FMMARGINAMT, value);
    }

    /**
     * Gets the attribute value for FmnetRate, using the alias name FmnetRate.
     * @return the value of FmnetRate
     */
    public BigDecimal getFmnetRate() {
        return (BigDecimal) getAttributeInternal(FMNETRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmnetRate.
     * @param value value to set the FmnetRate
     */
    public void setFmnetRate(BigDecimal value) {
        setAttributeInternal(FMNETRATE, value);
    }

    /**
     * Gets the attribute value for Fmremarks, using the alias name Fmremarks.
     * @return the value of Fmremarks
     */
    public String getFmremarks() {
        return (String) getAttributeInternal(FMREMARKS);
    }

    /**
     * Sets <code>value</code> as the attribute value for Fmremarks.
     * @param value value to set the Fmremarks
     */
    public void setFmremarks(String value) {
        setAttributeInternal(FMREMARKS, value);
    }

    /**
     * Gets the attribute value for RefineryRate, using the alias name RefineryRate.
     * @return the value of RefineryRate
     */
    public BigDecimal getRefineryRate() {
        return (BigDecimal) getAttributeInternal(REFINERYRATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for RefineryRate.
     * @param value value to set the RefineryRate
     */
    public void setRefineryRate(BigDecimal value) {
        setAttributeInternal(REFINERYRATE, value);
    }

    /**
     * Gets the attribute value for OmcPer, using the alias name OmcPer.
     * @return the value of OmcPer
     */
    public String getOmcPer() {
        return (String) getAttributeInternal(OMCPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for OmcPer.
     * @param value value to set the OmcPer
     */
    public void setOmcPer(String value) {
        setAttributeInternal(OMCPER, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * @return the associated entity TblFmitemsImpl.
     */
    public TblFmitemsImpl getTblFmitems() {
        return (TblFmitemsImpl) getAttributeInternal(TBLFMITEMS);
    }

    /**
     * Sets <code>value</code> as the associated entity TblFmitemsImpl.
     */
    public void setTblFmitems(TblFmitemsImpl value) {
        setAttributeInternal(TBLFMITEMS, value);
    }

    /**
     * @return the associated entity TblFmlocationImpl.
     */
    public TblFmlocationImpl getTblFmlocation() {
        return (TblFmlocationImpl) getAttributeInternal(TBLFMLOCATION);
    }

    /**
     * Sets <code>value</code> as the associated entity TblFmlocationImpl.
     */
    public void setTblFmlocation(TblFmlocationImpl value) {
        setAttributeInternal(TBLFMLOCATION, value);
    }

    /**
     * @return the associated entity oracle.jbo.server.EntityImpl.
     */
    public EntityImpl getTblFmvendors() {
        return (EntityImpl) getAttributeInternal(TBLFMVENDORS);
    }

    /**
     * Sets <code>value</code> as the associated entity oracle.jbo.server.EntityImpl.
     */
    public void setTblFmvendors(EntityImpl value) {
        setAttributeInternal(TBLFMVENDORS, value);
    }

    /**
     * @param fmratesId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal fmratesId) {
        return new Key(new Object[] { fmratesId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblFmrates");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
             try {
                 loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessUMID"));
             } catch(Exception ex) {
                 ex.printStackTrace();
             }
             
             if (operation == DML_INSERT) {
                 setCreatedBy(loginId);
                 setUpdatedBy(loginId);
                 } else if(operation == DML_UPDATE) {
                 setUpdatedBy(loginId);
             }
        super.doDML(operation, e);
    }
}

