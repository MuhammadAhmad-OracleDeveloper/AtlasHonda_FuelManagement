package model.EO;

import java.math.BigDecimal;

import java.sql.Timestamp;

import oracle.adf.share.ADFContext;

import oracle.jbo.Key;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Jul 27 12:36:12 PKT 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TblFmvendorsImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        FmvendorsId,
        FmvendorsName,
        Ast,
        FmvendorsCper,
        FmvendorsDsg,
        FmvendorsAdrs,
        FmvendorsPhone,
        FmvendorsMob,
        FmvendorsNtn,
        FmvendorsStrn,
        FmvendorsCrl,
        CreatedBy,
        CreatedDate,
        UpdatedBy,
        UpdatedDate,
        TblFmpoM,
        TblFmrates,
        TblFmvendorsAtribute,
        TblFmvendorsLocation;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int FMVENDORSID = AttributesEnum.FmvendorsId.index();
    public static final int FMVENDORSNAME = AttributesEnum.FmvendorsName.index();
    public static final int AST = AttributesEnum.Ast.index();
    public static final int FMVENDORSCPER = AttributesEnum.FmvendorsCper.index();
    public static final int FMVENDORSDSG = AttributesEnum.FmvendorsDsg.index();
    public static final int FMVENDORSADRS = AttributesEnum.FmvendorsAdrs.index();
    public static final int FMVENDORSPHONE = AttributesEnum.FmvendorsPhone.index();
    public static final int FMVENDORSMOB = AttributesEnum.FmvendorsMob.index();
    public static final int FMVENDORSNTN = AttributesEnum.FmvendorsNtn.index();
    public static final int FMVENDORSSTRN = AttributesEnum.FmvendorsStrn.index();
    public static final int FMVENDORSCRL = AttributesEnum.FmvendorsCrl.index();
    public static final int CREATEDBY = AttributesEnum.CreatedBy.index();
    public static final int CREATEDDATE = AttributesEnum.CreatedDate.index();
    public static final int UPDATEDBY = AttributesEnum.UpdatedBy.index();
    public static final int UPDATEDDATE = AttributesEnum.UpdatedDate.index();
    public static final int TBLFMPOM = AttributesEnum.TblFmpoM.index();
    public static final int TBLFMRATES = AttributesEnum.TblFmrates.index();
    public static final int TBLFMVENDORSATRIBUTE = AttributesEnum.TblFmvendorsAtribute.index();
    public static final int TBLFMVENDORSLOCATION = AttributesEnum.TblFmvendorsLocation.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TblFmvendorsImpl() {
    }

    /**
     * Gets the attribute value for FmvendorsId, using the alias name FmvendorsId.
     * @return the value of FmvendorsId
     */
    public BigDecimal getFmvendorsId() {
        return (BigDecimal) getAttributeInternal(FMVENDORSID);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsId.
     * @param value value to set the FmvendorsId
     */
    public void setFmvendorsId(BigDecimal value) {
        setAttributeInternal(FMVENDORSID, value);
    }

    /**
     * Gets the attribute value for FmvendorsName, using the alias name FmvendorsName.
     * @return the value of FmvendorsName
     */
    public String getFmvendorsName() {
        return (String) getAttributeInternal(FMVENDORSNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsName.
     * @param value value to set the FmvendorsName
     */
    public void setFmvendorsName(String value) {
        setAttributeInternal(FMVENDORSNAME, value);
    }

    /**
     * Gets the attribute value for Ast, using the alias name Ast.
     * @return the value of Ast
     */
    public String getAst() {
        return (String) getAttributeInternal(AST);
    }

    /**
     * Sets <code>value</code> as the attribute value for Ast.
     * @param value value to set the Ast
     */
    public void setAst(String value) {
        setAttributeInternal(AST, value);
    }

    /**
     * Gets the attribute value for FmvendorsCper, using the alias name FmvendorsCper.
     * @return the value of FmvendorsCper
     */
    public String getFmvendorsCper() {
        return (String) getAttributeInternal(FMVENDORSCPER);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsCper.
     * @param value value to set the FmvendorsCper
     */
    public void setFmvendorsCper(String value) {
        setAttributeInternal(FMVENDORSCPER, value);
    }

    /**
     * Gets the attribute value for FmvendorsDsg, using the alias name FmvendorsDsg.
     * @return the value of FmvendorsDsg
     */
    public String getFmvendorsDsg() {
        return (String) getAttributeInternal(FMVENDORSDSG);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsDsg.
     * @param value value to set the FmvendorsDsg
     */
    public void setFmvendorsDsg(String value) {
        setAttributeInternal(FMVENDORSDSG, value);
    }

    /**
     * Gets the attribute value for FmvendorsAdrs, using the alias name FmvendorsAdrs.
     * @return the value of FmvendorsAdrs
     */
    public String getFmvendorsAdrs() {
        return (String) getAttributeInternal(FMVENDORSADRS);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsAdrs.
     * @param value value to set the FmvendorsAdrs
     */
    public void setFmvendorsAdrs(String value) {
        setAttributeInternal(FMVENDORSADRS, value);
    }

    /**
     * Gets the attribute value for FmvendorsPhone, using the alias name FmvendorsPhone.
     * @return the value of FmvendorsPhone
     */
    public String getFmvendorsPhone() {
        return (String) getAttributeInternal(FMVENDORSPHONE);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsPhone.
     * @param value value to set the FmvendorsPhone
     */
    public void setFmvendorsPhone(String value) {
        setAttributeInternal(FMVENDORSPHONE, value);
    }

    /**
     * Gets the attribute value for FmvendorsMob, using the alias name FmvendorsMob.
     * @return the value of FmvendorsMob
     */
    public String getFmvendorsMob() {
        return (String) getAttributeInternal(FMVENDORSMOB);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsMob.
     * @param value value to set the FmvendorsMob
     */
    public void setFmvendorsMob(String value) {
        setAttributeInternal(FMVENDORSMOB, value);
    }

    /**
     * Gets the attribute value for FmvendorsNtn, using the alias name FmvendorsNtn.
     * @return the value of FmvendorsNtn
     */
    public String getFmvendorsNtn() {
        return (String) getAttributeInternal(FMVENDORSNTN);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsNtn.
     * @param value value to set the FmvendorsNtn
     */
    public void setFmvendorsNtn(String value) {
        setAttributeInternal(FMVENDORSNTN, value);
    }

    /**
     * Gets the attribute value for FmvendorsStrn, using the alias name FmvendorsStrn.
     * @return the value of FmvendorsStrn
     */
    public String getFmvendorsStrn() {
        return (String) getAttributeInternal(FMVENDORSSTRN);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsStrn.
     * @param value value to set the FmvendorsStrn
     */
    public void setFmvendorsStrn(String value) {
        setAttributeInternal(FMVENDORSSTRN, value);
    }

    /**
     * Gets the attribute value for FmvendorsCrl, using the alias name FmvendorsCrl.
     * @return the value of FmvendorsCrl
     */
    public String getFmvendorsCrl() {
        return (String) getAttributeInternal(FMVENDORSCRL);
    }

    /**
     * Sets <code>value</code> as the attribute value for FmvendorsCrl.
     * @param value value to set the FmvendorsCrl
     */
    public void setFmvendorsCrl(String value) {
        setAttributeInternal(FMVENDORSCRL, value);
    }

    /**
     * Gets the attribute value for CreatedBy, using the alias name CreatedBy.
     * @return the value of CreatedBy
     */
    public Number getCreatedBy() {
        return (Number) getAttributeInternal(CREATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for CreatedBy.
     * @param value value to set the CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**
     * Gets the attribute value for CreatedDate, using the alias name CreatedDate.
     * @return the value of CreatedDate
     */
    public Timestamp getCreatedDate() {
        return (Timestamp) getAttributeInternal(CREATEDDATE);
    }

    /**
     * Gets the attribute value for UpdatedBy, using the alias name UpdatedBy.
     * @return the value of UpdatedBy
     */
    public Number getUpdatedBy() {
        return (Number) getAttributeInternal(UPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for UpdatedBy.
     * @param value value to set the UpdatedBy
     */
    public void setUpdatedBy(Number value) {
        setAttributeInternal(UPDATEDBY, value);
    }

    /**
     * Gets the attribute value for UpdatedDate, using the alias name UpdatedDate.
     * @return the value of UpdatedDate
     */
    public Timestamp getUpdatedDate() {
        return (Timestamp) getAttributeInternal(UPDATEDDATE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblFmpoM() {
        return (RowIterator) getAttributeInternal(TBLFMPOM);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblFmrates() {
        return (RowIterator) getAttributeInternal(TBLFMRATES);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblFmvendorsAtribute() {
        return (RowIterator) getAttributeInternal(TBLFMVENDORSATRIBUTE);
    }

    /**
     * @return the associated entity oracle.jbo.RowIterator.
     */
    public RowIterator getTblFmvendorsLocation() {
        return (RowIterator) getAttributeInternal(TBLFMVENDORSLOCATION);
    }

    /**
     * @param fmvendorsId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(BigDecimal fmvendorsId) {
        return new Key(new Object[] { fmvendorsId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.EO.TblFmvendors");
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        Number loginId = null;
             try {
                 loginId = new Number((String) ADFContext.getCurrent().getSessionScope().get("sessRID"));
             } catch(Exception ex) {
                 ex.printStackTrace();
             }
             
             if (operation == DML_INSERT) {
                 setCreatedBy(loginId);
                 setUpdatedBy(loginId);
                 } else if(operation == DML_UPDATE) {
                 setUpdatedBy(loginId);
             }
        super.doDML(operation, e);
    }
}

